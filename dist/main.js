/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ requiredArgs)\n/* harmony export */ });\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/_lib/requiredArgs/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isFuture/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/esm/isFuture/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isFuture)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * const result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  return (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate).getTime() > Date.now();\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isFuture/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameDay/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameDay/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSameDay)\n/* harmony export */ });\n/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfDay/index.js */ \"./node_modules/date-fns/esm/startOfDay/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nfunction isSameDay(dirtyDateLeft, dirtyDateRight) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(2, arguments);\n  var dateLeftStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateLeft);\n  var dateRightStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isSameDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isToday/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/esm/isToday/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isToday)\n/* harmony export */ });\n/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isSameDay/index.js */ \"./node_modules/date-fns/esm/isSameDay/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  return (0,_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate, Date.now());\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isToday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/startOfDay/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/startOfDay/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ startOfDay)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/startOfDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/toDate/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/toDate/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toDate)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || (0,_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/toDate/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_UI__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/UI */ \"./src/modules/UI.js\");\n\r\n\r\n(0,_modules_UI__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ }),

/***/ "./src/modules/CreateList.js":
/*!***********************************!*\
  !*** ./src/modules/CreateList.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProjectList: () => (/* binding */ createProjectList),\n/* harmony export */   createTaskList: () => (/* binding */ createTaskList),\n/* harmony export */   getProjectInputField: () => (/* binding */ getProjectInputField)\n/* harmony export */ });\nif (localStorage.getItem(\"tasks\")) createTaskList();\r\nif (localStorage.getItem(\"projects\")) createProjectList();\r\n\r\nfunction createTaskList() {\r\n  const storedTask = JSON.parse(localStorage.getItem(\"tasks\"));\r\n  const taskContainer = document.querySelector(\".task-list-container\");\r\n  taskContainer.textContent = \"\";\r\n\r\n  for (let i = 0; i < storedTask.length; i++) {\r\n    // Visible div\r\n    const taskList = document.createElement(\"div\");\r\n    taskList.classList.add(\"task-list\");\r\n\r\n    const visibleTaskInfo = document.createElement(\"div\");\r\n    visibleTaskInfo.classList.add(\"visible-task-info\");\r\n\r\n    const taskLeft = document.createElement(\"div\");\r\n    taskLeft.classList.add(\"task-left\");\r\n\r\n    const taskTitle = document.createElement(\"span\");\r\n    taskTitle.classList.add(\"task-title\");\r\n    taskTitle.textContent = storedTask[i].title;\r\n\r\n    const taskListController = document.createElement(\"div\");\r\n    taskListController.classList.add(\"task-list-controller\");\r\n\r\n    const taskEditButton = document.createElement(\"button\");\r\n    taskEditButton.classList.add(\"task-edit-button\");\r\n    taskEditButton.innerHTML = \"<i class= 'fa-solid fa-pencil'></i>\";\r\n\r\n    const taskPriorityButton = document.createElement(\"button\");\r\n    taskPriorityButton.innerHTML = \"<i class='fa-solid fa-flag'></i>\";\r\n    taskPriorityButton.classList.add(\"task-priority-button\");\r\n\r\n    if (storedTask[i].priority === \"Low\") {\r\n      taskPriorityButton.style.color = \"green\";\r\n    } else if (storedTask[i].priority === \"Medium\") {\r\n      taskPriorityButton.style.color = \"orange\";\r\n    } else if (storedTask[i].priority === \"High\") {\r\n      taskPriorityButton.style.color = \"red\";\r\n    }\r\n\r\n    const taskDeleteButton = document.createElement(\"button\");\r\n    taskDeleteButton.classList.add(\"task-delete-button\");\r\n    taskDeleteButton.innerHTML = \"<i class= 'fa-solid fa-trash'></i>\";\r\n\r\n    // Hidden div\r\n    const hiddenTask = document.createElement(\"div\");\r\n    hiddenTask.classList.add(\"hidden-task\");\r\n\r\n    const hiddenTaskInfo = document.createElement(\"div\");\r\n    hiddenTaskInfo.classList.add(\"hidden-task-info\");\r\n\r\n    const leftColumn = document.createElement(\"div\");\r\n    leftColumn.classList.add(\"task-left-column\");\r\n\r\n    const rightColumn = document.createElement(\"div\");\r\n    rightColumn.classList.add(\"task-right-column\");\r\n\r\n    function createTitleDiv() {\r\n      const taskTitleDiv = document.createElement(\"div\");\r\n      taskTitleDiv.classList.add(\"task-title-info\");\r\n      const title = document.createElement(\"span\");\r\n      title.style.fontWeight = \"bold\";\r\n      title.textContent = \"Title: \";\r\n      const content = document.createElement(\"span\");\r\n      content.classList.add(\"task-title\");\r\n      content.textContent = storedTask[i].title;\r\n      taskTitleDiv.appendChild(title);\r\n      taskTitleDiv.appendChild(content);\r\n      return taskTitleDiv;\r\n    }\r\n\r\n    function createDateDiv() {\r\n      const taskDateDiv = document.createElement(\"div\");\r\n      taskDateDiv.classList.add(\"task-date-info\");\r\n      const title = document.createElement(\"span\");\r\n      title.style.fontWeight = \"bold\";\r\n      title.textContent = \"Date: \";\r\n      const content = document.createElement(\"span\");\r\n      content.classList.add(\"task-date\");\r\n      content.textContent = storedTask[i].date;\r\n      taskDateDiv.appendChild(title);\r\n      taskDateDiv.appendChild(content);\r\n      return taskDateDiv;\r\n    }\r\n\r\n    function createDescriptionDiv() {\r\n      const taskDescriptionDiv = document.createElement(\"div\");\r\n      taskDescriptionDiv.classList.add(\"task-description-info\");\r\n      const title = document.createElement(\"span\");\r\n      title.style.fontWeight = \"bold\";\r\n      title.textContent = \"Description: \";\r\n      const content = document.createElement(\"span\");\r\n      content.classList.add(\"task-description\");\r\n      content.textContent = storedTask[i].description;\r\n      taskDescriptionDiv.appendChild(title);\r\n      taskDescriptionDiv.appendChild(content);\r\n      return taskDescriptionDiv;\r\n    }\r\n\r\n    function createPriorityDiv() {\r\n      const taskPriorityDiv = document.createElement(\"div\");\r\n      taskPriorityDiv.classList.add(\"task-priority-info\");\r\n      const title = document.createElement(\"span\");\r\n      title.style.fontWeight = \"bold\";\r\n      title.textContent = \"Priority: \";\r\n      const content = document.createElement(\"span\");\r\n      content.classList.add(\"task-priority\");\r\n      content.textContent = storedTask[i].priority;\r\n      taskPriorityDiv.appendChild(title);\r\n      taskPriorityDiv.appendChild(content);\r\n      return taskPriorityDiv;\r\n    }\r\n\r\n    taskLeft.appendChild(taskTitle);\r\n    taskListController.append(taskEditButton, taskPriorityButton, taskDeleteButton);\r\n    visibleTaskInfo.append(taskLeft, taskListController);\r\n\r\n    hiddenTask.appendChild(hiddenTaskInfo);\r\n    hiddenTaskInfo.append(leftColumn, rightColumn);\r\n    leftColumn.append(createTitleDiv(), createDateDiv());\r\n    rightColumn.append(createDescriptionDiv(), createPriorityDiv());\r\n\r\n    taskList.append(visibleTaskInfo, hiddenTask);\r\n    taskContainer.appendChild(taskList);\r\n  }\r\n}\r\n\r\nfunction createProjectList() {\r\n  const storedProject = JSON.parse(localStorage.getItem(\"projects\"));\r\n  const projectListContainer = document.querySelector(\".project-list-container\");\r\n  projectListContainer.textContent = \"\";\r\n\r\n  for (let i = 0; i < storedProject.length; i++) {\r\n    const projectList = document.createElement(\"div\");\r\n    projectList.classList.add(\"project-list\");\r\n\r\n    const projectName = document.createElement(\"button\");\r\n    projectName.classList.add(\"project-name\");\r\n\r\n    const leftSide = document.createElement(\"div\");\r\n    leftSide.classList.add(\"project-left-side\");\r\n\r\n    const iconSpan = document.createElement(\"span\");\r\n    iconSpan.innerHTML = \"<i class = 'fa-solid fa-tasks'></i>\";\r\n\r\n    const text = document.createElement(\"p\");\r\n    text.textContent = storedProject[i].title;\r\n\r\n    const rightSide = document.createElement(\"div\");\r\n    rightSide.classList.add(\"project-right-side\");\r\n    rightSide.innerHTML = \"<button class = 'delete-project-button'><i class = 'fa-solid fa-times'></i></button>\";\r\n\r\n    leftSide.appendChild(iconSpan);\r\n    leftSide.appendChild(text);\r\n\r\n    projectName.appendChild(leftSide);\r\n    projectName.appendChild(rightSide);\r\n\r\n    projectList.appendChild(projectName);\r\n    projectListContainer.appendChild(projectList);\r\n  }\r\n}\r\n\r\nfunction getProjectInputField() {\r\n  return document.getElementById(\"project-title-input\");\r\n}\r\n\n\n//# sourceURL=webpack://todo-list/./src/modules/CreateList.js?");

/***/ }),

/***/ "./src/modules/Form.js":
/*!*****************************!*\
  !*** ./src/modules/Form.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadEditForm: () => (/* binding */ loadEditForm),\n/* harmony export */   loadProjectForm: () => (/* binding */ loadProjectForm),\n/* harmony export */   loadTaskForm: () => (/* binding */ loadTaskForm)\n/* harmony export */ });\nfunction loadProjectForm() {\r\n  const projectListContainer = document.querySelector(\".project-list-container\");\r\n  return projectListContainer.before(createProjectForm());\r\n}\r\n\r\nfunction loadTaskForm() {\r\n  const main = document.querySelector(\"main\");\r\n  main.appendChild(createTaskForm());\r\n  addTaskProjectSelectOption();\r\n}\r\n\r\nfunction loadEditForm() {\r\n  const main = document.querySelector(\"main\");\r\n  main.appendChild(createEditForm());\r\n  addTaskProjectSelectOption();\r\n}\r\n\r\nfunction createProjectForm() {\r\n  const projectForm = document.createElement(\"div\");\r\n  projectForm.classList.add(\"project-form\");\r\n\r\n  const input = document.createElement(\"input\");\r\n  input.setAttribute(\"id\", \"project-title-input\");\r\n  input.setAttribute(\"autocomplete\", \"off\");\r\n  input.setAttribute(\"maxlength\", \"12\");\r\n  input.placeholder = \"Enter Project Title\";\r\n\r\n  setTimeout(() => {\r\n    input.focus();\r\n  }, 0);\r\n\r\n  const projectFormButton = document.createElement(\"div\");\r\n  projectFormButton.classList.add(\"project-form-button\");\r\n\r\n  const addButton = document.createElement(\"button\");\r\n  addButton.textContent = \"Add\";\r\n  addButton.classList.add(\"addButton\", \"project\");\r\n\r\n  const cancelButton = document.createElement(\"button\");\r\n  cancelButton.textContent = \"Cancel\";\r\n  cancelButton.classList.add(\"cancelButton\");\r\n\r\n  projectFormButton.appendChild(addButton);\r\n  projectFormButton.appendChild(cancelButton);\r\n\r\n  projectForm.appendChild(input);\r\n  projectForm.appendChild(projectFormButton);\r\n\r\n  return projectForm;\r\n}\r\n\r\nfunction createTaskForm() {\r\n  const popupField = document.createElement(\"div\");\r\n  popupField.classList.add(\"popup-field\");\r\n  popupField.innerHTML = `<form class=\"task-form\">\r\n    <fieldset>\r\n        <div class=\"column-one\">\r\n            <div class=\"form-element title\">\r\n                <label for=\"task-title-field\">Title</label>\r\n                <input id=\"task-title-field\" autocomplete = \"off\">\r\n            </div>\r\n\r\n            <div class=\"form-element description\">\r\n                <label for=\"task-description-field\">Description</label>\r\n                <textarea id=\"task-description-field\"></textarea>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"column-two\">\r\n            <div class=\"form-element date\">\r\n                <label for=\"task-date-field\">Due Date</label>\r\n                <input id=\"task-date-field\" type=\"date\">\r\n            </div>\r\n\r\n            <div class=\"form-element priority\">\r\n                <label for=\"task-priority-field\">Priority</label>\r\n                <select id=\"task-priority-field\">\r\n                    <option>Low</option>\r\n                    <option>Medium</option>\r\n                    <option>High</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n    </fieldset>\r\n    <div class=\"form-button\">\r\n        <button class=\"cancelButton\">Cancel</button>\r\n        <button class=\"addButton task\">Add Task</button>\r\n    </div>\r\n</form>`;\r\n  return popupField;\r\n}\r\n\r\nfunction createEditForm() {\r\n  const popupField = document.createElement(\"div\");\r\n  popupField.classList.add(\"popup-field\");\r\n  popupField.innerHTML = `<form class=\"task-form edit\">\r\n    <fieldset>\r\n        <div class=\"column-one\">\r\n            <div class=\"form-element title\">\r\n                <label for=\"task-title-field\">Title</label>\r\n                <input id=\"task-title-field\" autocomplete = \"off\">\r\n            </div>\r\n\r\n            <div class=\"form-element description\">\r\n                <label for=\"task-description-field\">Description</label>\r\n                <textarea id=\"task-description-field\"></textarea>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"column-two\">\r\n            <div class=\"form-element date\">\r\n                <label for=\"task-date-field\">Due Date</label>\r\n                <input id=\"task-date-field\" type=\"date\">\r\n            </div>\r\n\r\n            <div class=\"form-element priority\">\r\n                <label for=\"task-priority-field\">Priority</label>\r\n                <select id=\"task-priority-field\">\r\n                    <option>Low</option>\r\n                    <option>Medium</option>\r\n                    <option>High</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n    </fieldset>\r\n    <div class=\"form-button\">\r\n        <button class=\"cancelButton\">Cancel</button>\r\n        <button class=\"updateButton\">Update Task</button>\r\n    </div>\r\n</form>`;\r\n  return popupField;\r\n}\r\n\r\nfunction addTaskProjectSelectOption() {\r\n  const projectListContainer = document.querySelector(\".project-list-container\");\r\n  const taskForm = document.querySelector(\".task-form > fieldset > .column-two\");\r\n\r\n  const projectFormElement = document.createElement(\"div\");\r\n  projectFormElement.classList.add(\"form-element\", \"project\");\r\n\r\n  const projectSelectLabel = document.createElement(\"label\");\r\n  projectSelectLabel.setAttribute(\"for\", \"task-project-field\");\r\n  projectSelectLabel.textContent = \"Project\";\r\n\r\n  const projectSelectField = document.createElement(\"select\");\r\n  projectSelectField.setAttribute(\"id\", \"task-project-field\");\r\n  projectSelectField.add(new Option(\"Inbox\"));\r\n  if (projectListContainer.querySelector(\".project-list\")) {\r\n    const projectList = document.querySelectorAll(\".project-list\");\r\n    projectList.forEach((element) => {\r\n      const projectName = element.querySelector(\"p\");\r\n      projectSelectField.add(new Option(projectName.textContent));\r\n    });\r\n  }\r\n\r\n  projectFormElement.append(projectSelectLabel, projectSelectField);\r\n  taskForm.appendChild(projectFormElement);\r\n}\r\n\n\n//# sourceURL=webpack://todo-list/./src/modules/Form.js?");

/***/ }),

/***/ "./src/modules/Project.js":
/*!********************************!*\
  !*** ./src/modules/Project.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Project)\n/* harmony export */ });\nconst projectList = JSON.parse(localStorage.getItem(\"projects\")) || [];\r\nclass Project {\r\n  constructor(title) {\r\n    this.title = title;\r\n    this.task = [];\r\n  }\r\n\r\n  setProjectList(projectTitle) {\r\n    projectList.unshift({\r\n      title: projectTitle,\r\n    });\r\n    localStorage.setItem(\"projects\", JSON.stringify(projectList));\r\n  }\r\n\r\n  removeProjectList(index) {\r\n    projectList.splice(index, 1);\r\n    const getProject = JSON.parse(localStorage.getItem(\"projects\"));\r\n    getProject.splice(index, 1);\r\n    localStorage.setItem(\"projects\", JSON.stringify(projectList));\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://todo-list/./src/modules/Project.js?");

/***/ }),

/***/ "./src/modules/Tasks.js":
/*!******************************!*\
  !*** ./src/modules/Tasks.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Task)\n/* harmony export */ });\nconst taskList = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\nclass Task {\r\n  constructor(title, description, date, priority, tab) {\r\n    this.title = title;\r\n    this.description = description;\r\n    this.date = date;\r\n    this.priority = priority;\r\n    this.tab = tab;\r\n  }\r\n\r\n  setTaskList(taskTitle, taskDescription, taskDate, taskPriority, taskTab, taskProject) {\r\n    taskList.unshift({\r\n      title: taskTitle,\r\n      description: taskDescription,\r\n      date: taskDate,\r\n      priority: taskPriority,\r\n      tab: taskTab,\r\n      project: taskProject,\r\n    });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(taskList));\r\n  }\r\n\r\n  removeTaskList(index) {\r\n    taskList.splice(index, 1);\r\n    const getItem = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    getItem.splice(index, 1);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(getItem));\r\n  }\r\n\r\n  updateTaskList(title, description, date, priority, taskTab, taskProject, index) {\r\n    taskList[index].title = title;\r\n    taskList[index].description = description;\r\n    taskList[index].date = date;\r\n    taskList[index].priority = priority;\r\n    taskList[index].tab = taskTab;\r\n    taskList[index].project = taskProject;\r\n    localStorage.setItem(\"tasks\", JSON.stringify(taskList));\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://todo-list/./src/modules/Tasks.js?");

/***/ }),

/***/ "./src/modules/UI.js":
/*!***************************!*\
  !*** ./src/modules/UI.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ updateDom)\n/* harmony export */ });\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Form */ \"./src/modules/Form.js\");\n/* harmony import */ var _Project__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Project */ \"./src/modules/Project.js\");\n/* harmony import */ var _Tasks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tasks */ \"./src/modules/Tasks.js\");\n/* harmony import */ var _CreateList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CreateList */ \"./src/modules/CreateList.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isToday/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isFuture/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nfunction updateDom() {\r\n  const main = document.querySelector(\"main\");\r\n  const headerDiv = document.querySelector(\".header\");\r\n  const headerTitle = document.querySelector(\".header-title\");\r\n  const projectContainer = document.querySelector(\".project-container\");\r\n  const taskListContainer = document.querySelector(\".task-list-container\");\r\n  const projectListContainer = document.querySelector(\".project-list-container\");\r\n  const addProjectButton = document.querySelector(\".add-project-button\");\r\n  const addTaskButton = document.querySelector(\".add-task-button\");\r\n  let projectFormDisplayed = false;\r\n  let taskFormDisplayed = false;\r\n  let editFormDisplayed = false;\r\n\r\n  // Project manage\r\n  function checkEmptyInput() {\r\n    const projectInputField = document.getElementById(\"project-title-input\");\r\n    projectInputField.classList.add(\"invalid\");\r\n    displayErrorMessage().emptyMessage();\r\n    setTimeout(hideErrorMessage, 3000);\r\n    projectInputField.addEventListener(\"input\", () => {\r\n      if (projectInputField.value === \"\") {\r\n        projectInputField.classList.add(\"invalid\");\r\n      } else if (projectInputField.value !== \"\") {\r\n        projectInputField.classList.remove(\"invalid\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function checkLengthyInput() {\r\n    displayErrorMessage().lengthyMessage();\r\n    setTimeout(hideErrorMessage, 3000);\r\n    (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.getProjectInputField)().addEventListener(\"input\", () => {\r\n      if ((0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.getProjectInputField)().value.length <= 12) {\r\n        (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.getProjectInputField)().classList.remove(\"invalid\");\r\n      } else if ((0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.getProjectInputField)().value.length > 12) {\r\n        (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.getProjectInputField)().classList.add(\"invalid\");\r\n      }\r\n    });\r\n    (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.getProjectInputField)().classList.add(\"invalid\");\r\n  }\r\n\r\n  function displayErrorMessage() {\r\n    const titleErrorMessage = document.createElement(\"div\");\r\n    titleErrorMessage.classList.add(\"error-message\");\r\n\r\n    function emptyMessage() {\r\n      titleErrorMessage.textContent = \"Project title cannot be empty\";\r\n      main.appendChild(titleErrorMessage);\r\n    }\r\n\r\n    function lengthyMessage() {\r\n      titleErrorMessage.textContent = \"Project title cannot be longer than 12 characters\";\r\n      main.appendChild(titleErrorMessage);\r\n    }\r\n\r\n    return { emptyMessage, lengthyMessage };\r\n  }\r\n\r\n  function hideErrorMessage() {\r\n    const titleErrorMessage = document.querySelector(\".error-message\");\r\n    main.removeChild(titleErrorMessage);\r\n  }\r\n\r\n  function displayProjectForm() {\r\n    addProjectButton.classList.add(\"hide\");\r\n    (0,_Form__WEBPACK_IMPORTED_MODULE_0__.loadProjectForm)();\r\n    projectFormDisplayed = true;\r\n  }\r\n\r\n  function displayProjectList() {\r\n    const inputField = document.getElementById(\"project-title-input\");\r\n    if (inputField.value === \"\") {\r\n      checkEmptyInput();\r\n      return;\r\n    }\r\n\r\n    if (inputField.value.length > 12) {\r\n      checkLengthyInput();\r\n      return;\r\n    }\r\n    const project = new _Project__WEBPACK_IMPORTED_MODULE_1__[\"default\"](inputField.value);\r\n    project.setProjectList(project.title);\r\n\r\n    (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.createProjectList)();\r\n    removeForm();\r\n  }\r\n\r\n  // Task manage\r\n  function displayTaskForm() {\r\n    (0,_Form__WEBPACK_IMPORTED_MODULE_0__.loadTaskForm)();\r\n    taskFormDisplayed = true;\r\n  }\r\n\r\n  function getTaskInputFieldElement() {\r\n    const titleField = document.getElementById(\"task-title-field\");\r\n    const descriptionField = document.getElementById(\"task-description-field\");\r\n    const dateField = document.getElementById(\"task-date-field\");\r\n    const priorityField = document.getElementById(\"task-priority-field\");\r\n    const taskProjectField = document.getElementById(\"task-project-field\");\r\n\r\n    return {\r\n      titleField,\r\n      descriptionField,\r\n      dateField,\r\n      priorityField,\r\n      taskProjectField,\r\n    };\r\n  }\r\n\r\n  function getTaskListElement(event) {\r\n    const taskTitle = getParentNode(event.target, 4).querySelector(\".task-title\");\r\n    const secondTaskName = getParentNode(event.target, 4).querySelector(\".hidden-task-info .task-title\");\r\n    const taskDescription = getParentNode(event.target, 4).querySelector(\".task-description\");\r\n    const taskDate = getParentNode(event.target, 4).querySelector(\".task-date\");\r\n    const taskPriority = getParentNode(event.target, 4).querySelector(\".task-priority\");\r\n\r\n    return {\r\n      taskTitle,\r\n      secondTaskName,\r\n      taskDescription,\r\n      taskDate,\r\n      taskPriority,\r\n    };\r\n  }\r\n\r\n  function setupEditForm(event) {\r\n    const editTitleField = getTaskInputFieldElement().titleField;\r\n    console.log(editTitleField);\r\n    editTitleField.value = getParentNode(event.target, 4).querySelector(\".task-title\").textContent;\r\n\r\n    const editDescriptionField = getTaskInputFieldElement().descriptionField;\r\n    editDescriptionField.value = getParentNode(event.target, 4).querySelector(\".task-description\").textContent;\r\n\r\n    const editDateField = getTaskInputFieldElement().dateField;\r\n    editDateField.value = getParentNode(event.target, 4).querySelector(\".task-date\").textContent;\r\n\r\n    const editPriorityField = getTaskInputFieldElement().priorityField;\r\n    editPriorityField.value = getParentNode(event.target, 4).querySelector(\".task-priority\").textContent;\r\n\r\n    editFormDisplayed = true;\r\n    event.stopPropagation();\r\n  }\r\n\r\n  function editButtonHandler(event) {\r\n    (0,_Form__WEBPACK_IMPORTED_MODULE_0__.loadEditForm)();\r\n    updateButtonHandler(event);\r\n    cancelButtonHandler();\r\n    setupEditForm(event);\r\n    event.stopPropagation();\r\n  }\r\n\r\n  function priorityButtonHandler(event) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  function deleteButtonHandler(event) {\r\n    let taskList;\r\n    if (event.target.classList.contains(\"fa-trash\")) {\r\n      taskList = getParentNode(event.target, 5);\r\n      removeTaskList();\r\n    } else if (event.target.classList.contains(\"task-delete-button\")) {\r\n      taskList = getParentNode(event.target, 4);\r\n      removeTaskList();\r\n    }\r\n\r\n    let projectList;\r\n    if (event.target.classList.contains(\"fa-times\")) {\r\n      projectList = getParentNode(event.target, 5);\r\n      removeProject();\r\n    } else if (event.target.classList.contains(\"delete-project-button\")) {\r\n      projectList = getParentNode(event.target, 4);\r\n      removeProject();\r\n    }\r\n\r\n    function removeTaskList() {\r\n      const taskListArray = document.querySelectorAll(\".task-list-container > .task-list\");\r\n      const index = [].indexOf.call(taskListArray, taskList);\r\n\r\n      const task = new _Tasks__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n      task.removeTaskList(index);\r\n\r\n      taskListContainer.removeChild(taskList);\r\n    }\r\n\r\n    function removeProject() {\r\n      const projectListArray = document.querySelectorAll(\".project-list-container > .project-list\");\r\n      const index = [].indexOf.call(projectListArray, projectList);\r\n\r\n      const project = new _Project__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n      project.removeProjectList(index);\r\n\r\n      projectListContainer.removeChild(projectList);\r\n    }\r\n\r\n    event.stopPropagation();\r\n  }\r\n\r\n  function removeForm() {\r\n    if (projectFormDisplayed) {\r\n      const projectForm = document.querySelector(\".project-form\");\r\n\r\n      projectFormDisplayed = false;\r\n      projectForm.removeEventListener(\"keydown\", addButtonHandler);\r\n\r\n      addProjectButton.classList.remove(\"hide\");\r\n      projectContainer.removeChild(projectForm);\r\n    }\r\n\r\n    if (taskFormDisplayed || editFormDisplayed) {\r\n      const main = document.querySelector(\"main\");\r\n      const popupField = document.querySelector(\".popup-field\");\r\n      taskFormDisplayed = false;\r\n      editFormDisplayed = false;\r\n\r\n      main.removeChild(popupField);\r\n    }\r\n  }\r\n\r\n  function checkInvalidTaskInput() {\r\n    const formElement = document.querySelectorAll(\".form-element\");\r\n    const taskTitleInput = getTaskInputFieldElement().titleField;\r\n    const taskDescriptionInput = getTaskInputFieldElement().descriptionField;\r\n    const taskDateInput = getTaskInputFieldElement().dateField;\r\n\r\n    const titleErrorMessage = document.createElement(\"span\");\r\n    const descriptionErrorMessage = document.createElement(\"span\");\r\n    const dateErrorMessage = document.createElement(\"span\");\r\n\r\n    if (taskTitleInput.value === \"\") {\r\n      formElement.forEach((element) => {\r\n        if (element.classList.contains(\"title\")) {\r\n          if (element.querySelector(\".invalid-message\")) {\r\n            return;\r\n          } else {\r\n            titleErrorMessage.textContent = \"Task title is required\";\r\n            titleErrorMessage.classList.add(\"invalid-message\");\r\n            taskTitleInput.after(titleErrorMessage);\r\n            taskTitleInput.classList.add(\"invalid\");\r\n          }\r\n        }\r\n      });\r\n      taskTitleInput.addEventListener(\"input\", () => {\r\n        if (taskTitleInput.value === \"\") {\r\n          taskTitleInput.classList.add(\"invalid\");\r\n          formElement.forEach((element) => {\r\n            if (element.classList.contains(\"title\")) {\r\n              if (element.querySelector(\".invalid-message\")) {\r\n                return;\r\n              } else {\r\n                taskTitleInput.after(titleErrorMessage);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          if (taskTitleInput.classList.contains(\"invalid\")) {\r\n            taskTitleInput.removeAttribute(\"class\");\r\n            formElement.forEach((element) => {\r\n              if (element.classList.contains(\"title\")) {\r\n                element.removeChild(titleErrorMessage);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (taskDescriptionInput.value === \"\") {\r\n      formElement.forEach((element) => {\r\n        if (element.classList.contains(\"description\")) {\r\n          if (element.querySelector(\".invalid-message\")) {\r\n            return;\r\n          } else {\r\n            descriptionErrorMessage.textContent = \"Task description is required\";\r\n            descriptionErrorMessage.classList.add(\"invalid-message\");\r\n            taskDescriptionInput.after(descriptionErrorMessage);\r\n            taskDescriptionInput.classList.add(\"invalid\");\r\n          }\r\n        }\r\n      });\r\n      taskDescriptionInput.addEventListener(\"input\", () => {\r\n        if (taskDescriptionInput.value === \"\") {\r\n          taskDescriptionInput.classList.add(\"invalid\");\r\n          formElement.forEach((element) => {\r\n            if (element.classList.contains(\"description\")) {\r\n              if (element.querySelector(\".invalid-message\")) {\r\n                return;\r\n              } else {\r\n                taskDescriptionInput.after(descriptionErrorMessage);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          if (taskDescriptionInput.classList.contains(\"invalid\")) {\r\n            taskDescriptionInput.removeAttribute(\"class\");\r\n            formElement.forEach((element) => {\r\n              if (element.classList.contains(\"description\")) {\r\n                element.removeChild(descriptionErrorMessage);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (taskDateInput.value === \"\") {\r\n      formElement.forEach((element) => {\r\n        if (element.classList.contains(\"date\")) {\r\n          if (element.querySelector(\".invalid-message\")) {\r\n            return;\r\n          } else {\r\n            dateErrorMessage.textContent = \"Due date is required\";\r\n            dateErrorMessage.classList.add(\"invalid-message\");\r\n            taskDateInput.after(dateErrorMessage);\r\n            taskDateInput.classList.add(\"invalid\");\r\n          }\r\n        }\r\n      });\r\n      taskDateInput.addEventListener(\"input\", () => {\r\n        if (taskDateInput.value === \"\") {\r\n          taskDateInput.classList.add(\"invalid\");\r\n          formElement.forEach((element) => {\r\n            if (element.classList.contains(\"date\")) {\r\n              if (element.querySelector(\".invalid-message\")) {\r\n                return;\r\n              } else {\r\n                taskDateInput.after(dateErrorMessage);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          if (taskDateInput.classList.contains(\"invalid\")) {\r\n            taskDateInput.removeAttribute(\"class\");\r\n            formElement.forEach((element) => {\r\n              if (element.classList.contains(\"date\")) {\r\n                element.removeChild(dateErrorMessage);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function displayTaskList() {\r\n    const taskTitleInput = getTaskInputFieldElement().titleField;\r\n    const taskDescriptionInput = getTaskInputFieldElement().descriptionField;\r\n    const taskDateInput = getTaskInputFieldElement().dateField;\r\n    const taskPriorityInput = getTaskInputFieldElement().priorityField;\r\n    const taskProjectInput = getTaskInputFieldElement().taskProjectField;\r\n\r\n    if (\r\n      getTaskInputFieldElement().titleField.value === \"\" ||\r\n      getTaskInputFieldElement().descriptionField.value === \"\" ||\r\n      getTaskInputFieldElement().dateField.value === \"\"\r\n    ) {\r\n      checkInvalidTaskInput();\r\n      return;\r\n    } else {\r\n      const year = taskDateInput.value.split(\"-\")[0];\r\n      const month = parseFloat(taskDateInput.value.split(\"-\")[1]) - 1;\r\n      const day = taskDateInput.value.split(\"-\")[2];\r\n      const today = (0,date_fns__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(new Date(year, month, day));\r\n      const future = (0,date_fns__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(new Date(year, month, day));\r\n      let taskTab;\r\n      if (today) {\r\n        taskTab = \"today\";\r\n      } else if (future) {\r\n        taskTab = \"upcoming\";\r\n      } else {\r\n        taskTab = \"inbox\";\r\n      }\r\n      const task = new _Tasks__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\r\n        taskTitleInput.value,\r\n        taskDescriptionInput.value,\r\n        taskDateInput.value,\r\n        taskPriorityInput.value,\r\n        taskTab\r\n      );\r\n      task.setTaskList(task.title, task.description, task.date, task.priority, task.tab, taskProjectInput.value);\r\n      (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.createTaskList)();\r\n      removeForm();\r\n    }\r\n  }\r\n\r\n  function displayHiddenTaskInfo(element, event) {\r\n    const collapseDiv = element.querySelector(\".hidden-task\");\r\n    if (collapseDiv.clientHeight) {\r\n      collapseDiv.style.maxHeight = 0;\r\n      setTimeout(() => {\r\n        collapseDiv.removeAttribute(\"style\");\r\n      }, 300);\r\n    } else {\r\n      collapseDiv.style.maxHeight = collapseDiv.scrollHeight + \"px\";\r\n      setTimeout(() => {\r\n        collapseDiv.removeAttribute(\"style\");\r\n      }, 300);\r\n    }\r\n    collapseDiv.classList.toggle(\"show\");\r\n    event.stopPropagation();\r\n  }\r\n\r\n  function addButtonHandler() {\r\n    const addButton = document.querySelectorAll(\".addButton\");\r\n    const projectForm = document.querySelector(\".project-form\");\r\n    addButton.forEach((button) => {\r\n      button.addEventListener(\"click\", (event) => {\r\n        event.preventDefault();\r\n        if (event.target.classList.contains(\"project\")) displayProjectList();\r\n        if (event.target.classList.contains(\"task\")) displayTaskList();\r\n      });\r\n\r\n      if (projectFormDisplayed) {\r\n        projectForm.addEventListener(\"keydown\", (event) => {\r\n          if (event.key === \"Enter\") displayProjectList();\r\n        });\r\n      }\r\n\r\n      if (taskFormDisplayed) {\r\n        main.addEventListener(\"keydown\", (event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault();\r\n            displayTaskList();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function cancelButtonHandler() {\r\n    const cancelButton = document.querySelectorAll(\".cancelButton\");\r\n    const projectForm = document.querySelector(\".project-form\");\r\n    cancelButton.forEach((button) => {\r\n      button.addEventListener(\"click\", (event) => {\r\n        event.preventDefault();\r\n        removeForm();\r\n      });\r\n\r\n      if (projectFormDisplayed) {\r\n        projectForm.addEventListener(\"keydown\", (event) => {\r\n          if (event.key === \"Escape\") removeForm();\r\n        });\r\n      }\r\n\r\n      if (taskFormDisplayed) {\r\n        main.addEventListener(\"keydown\", (event) => {\r\n          if (event.key === \"Escape\") {\r\n            removeForm();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateButtonHandler(event) {\r\n    const updateButton = document.querySelector(\".updateButton\");\r\n    const taskTitleField = getTaskInputFieldElement().titleField;\r\n    const taskDescriptionField = getTaskInputFieldElement().descriptionField;\r\n    const taskDateField = getTaskInputFieldElement().dateField;\r\n    const taskPriorityField = getTaskInputFieldElement().priorityField;\r\n    const taskProjectField = getTaskInputFieldElement().taskProjectField;\r\n\r\n    const taskTitle = getTaskListElement(event).taskTitle;\r\n    const secondTaskName = getTaskListElement(event).secondTaskName;\r\n    const taskDescription = getTaskListElement(event).taskDescription;\r\n    const taskDate = getTaskListElement(event).taskDate;\r\n    const taskPriority = getTaskListElement(event).taskPriority;\r\n\r\n    const taskArray = Array.from(document.querySelectorAll(\".task-list-container .task-list\"));\r\n    const index = taskArray.indexOf(getParentNode(event.target, 4));\r\n\r\n    const taskPriorityButton = getParentNode(event.target, 2).querySelector(\".task-priority-button\");\r\n\r\n    updateButton.addEventListener(\"click\", (event) => {\r\n      event.preventDefault();\r\n\r\n      if (taskTitleField.value === \"\" || taskDescriptionField.value === \"\" || taskDateField.value === \"\") {\r\n        checkInvalidTaskInput();\r\n        return;\r\n      }\r\n\r\n      taskTitle.textContent = taskTitleField.value;\r\n      secondTaskName.textContent = taskTitleField.value;\r\n      taskDescription.textContent = taskDescriptionField.value;\r\n      taskDate.textContent = taskDateField.value;\r\n      taskPriority.textContent = taskPriorityField.value;\r\n\r\n      if (taskPriorityField.value === \"Low\") {\r\n        taskPriorityButton.style.color = \"green\";\r\n      } else if (taskPriorityField.value === \"Medium\") {\r\n        taskPriorityButton.style.color = \"orange\";\r\n      } else {\r\n        taskPriorityButton.style.color = \"red\";\r\n      }\r\n\r\n      const year = taskDate.textContent.split(\"-\")[0];\r\n      const month = parseFloat(taskDate.textContent.split(\"-\")[1]) - 1;\r\n      const day = taskDate.textContent.split(\"-\")[2];\r\n      const today = (0,date_fns__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(new Date(year, month, day));\r\n      const future = (0,date_fns__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(new Date(year, month, day));\r\n      let taskTab;\r\n      if (today) {\r\n        taskTab = \"today\";\r\n      } else if (future) {\r\n        taskTab = \"upcoming\";\r\n      } else {\r\n        taskTab = \"inbox\";\r\n      }\r\n      const task = new _Tasks__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n      task.updateTaskList(\r\n        taskTitle.textContent,\r\n        taskDescription.textContent,\r\n        taskDate.textContent,\r\n        taskPriority.textContent,\r\n        taskTab,\r\n        taskProjectField.value,\r\n        index\r\n      );\r\n      removeForm();\r\n    });\r\n  }\r\n\r\n  function getParentNode(element, parent) {\r\n    if (element.classList.contains(\"fa-pencil\")) {\r\n      for (let i = 0; i < parent; i++) {\r\n        element = element.parentNode;\r\n      }\r\n      return element;\r\n    } else {\r\n      for (let i = 0; i < parent - 1; i++) {\r\n        element = element.parentNode;\r\n      }\r\n      return element;\r\n    }\r\n  }\r\n\r\n  addProjectButton.addEventListener(\"click\", () => {\r\n    displayProjectForm();\r\n    addButtonHandler();\r\n    cancelButtonHandler();\r\n  });\r\n\r\n  addTaskButton.addEventListener(\"click\", () => {\r\n    displayTaskForm();\r\n    addButtonHandler();\r\n    cancelButtonHandler();\r\n  });\r\n\r\n  const taskListObserver = new MutationObserver((mutationList) => {\r\n    mutationList.forEach((mutation) => {\r\n      if (mutation.type === \"childList\") {\r\n        mutation.addedNodes.forEach((element) => {\r\n          if (element.querySelector(\".task-title\")) {\r\n            const visibleTaskElement = element.querySelector(\".visible-task-info\");\r\n            visibleTaskElement.addEventListener(\"click\", (event) => displayHiddenTaskInfo(element, event));\r\n            const editButton = element.querySelector(\".task-edit-button\");\r\n            editButton.addEventListener(\"click\", (event) => editButtonHandler(event));\r\n            const priorityButton = element.querySelector(\".task-priority-button\");\r\n            priorityButton.addEventListener(\"click\", (event) => priorityButtonHandler(event));\r\n            const deleteButton = element.querySelector(\".task-delete-button\");\r\n            deleteButton.addEventListener(\"click\", (event) => deleteButtonHandler(event));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n  taskListObserver.observe(taskListContainer, {\r\n    childList: true,\r\n  });\r\n\r\n  if (taskListContainer.querySelector(\".task-list\")) {\r\n    const taskList = document.querySelectorAll(\".task-list\");\r\n    taskList.forEach((taskListElement) => {\r\n      const visibleTaskElement = taskListElement.querySelector(\".visible-task-info\");\r\n      visibleTaskElement.addEventListener(\"click\", (event) => displayHiddenTaskInfo(taskListElement, event));\r\n      const editButton = taskListElement.querySelector(\".task-edit-button\");\r\n      editButton.addEventListener(\"click\", (event) => editButtonHandler(event));\r\n      const priorityButton = taskListElement.querySelector(\".task-priority-button\");\r\n      priorityButton.addEventListener(\"click\", (event) => priorityButtonHandler(event));\r\n      const deleteButton = taskListElement.querySelector(\".task-delete-button\");\r\n      deleteButton.addEventListener(\"click\", (event) => deleteButtonHandler(event));\r\n    });\r\n  }\r\n\r\n  const projectListObserver = new MutationObserver((mutationList) => {\r\n    mutationList.forEach((mutation) => {\r\n      if (mutation.type === \"childList\") {\r\n        mutation.addedNodes.forEach((element) => {\r\n          if (element.querySelector(\".project-name\")) {\r\n            const deleteButton = element.querySelector(\".delete-project-button\");\r\n            deleteButton.addEventListener(\"click\", (event) => deleteButtonHandler(event));\r\n          }\r\n          element.addEventListener(\"click\", () => projectTabHandler(element));\r\n        });\r\n      }\r\n    });\r\n  });\r\n  projectListObserver.observe(projectListContainer, {\r\n    childList: true,\r\n  });\r\n\r\n  if (projectContainer.querySelector(\".project-list\")) {\r\n    const projectList = document.querySelectorAll(\".project-list\");\r\n    projectList.forEach((projectListElement) => {\r\n      const deleteButton = projectListElement.querySelector(\".delete-project-button\");\r\n      deleteButton.addEventListener(\"click\", (event) => {\r\n        deleteButtonHandler(event);\r\n      });\r\n    });\r\n  }\r\n\r\n  const inboxButton = document.querySelector(\".inbox-button\");\r\n  inboxButton.addEventListener(\"click\", () => {\r\n    (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.createTaskList)();\r\n    headerTitle.textContent = \"Inbox\";\r\n    if (!document.querySelector(\".add-task-button\")) {\r\n      headerDiv.appendChild(addTaskButton);\r\n    }\r\n  });\r\n\r\n  const todayButton = document.querySelector(\".today-button\");\r\n  todayButton.addEventListener(\"click\", () => {\r\n    const fillerMessage = document.createElement(\"p\");\r\n    fillerMessage.textContent = \"No tasks for today\";\r\n    headerTitle.textContent = \"Today\";\r\n    (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.createTaskList)();\r\n    taskListContainer.appendChild(fillerMessage);\r\n\r\n    if (document.querySelector(\".add-task-button\")) {\r\n      headerDiv.removeChild(addTaskButton);\r\n    }\r\n\r\n    const storedTask = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    const taskArray = Array.from(document.querySelectorAll(\".task-list-container .task-list\"));\r\n    for (let i = 0; i < storedTask.length; i++) {\r\n      if (storedTask[i].tab !== \"today\") {\r\n        const notTodayTaskList = taskArray[i];\r\n        if (notTodayTaskList) {\r\n          notTodayTaskList.style.display = \"none\";\r\n        }\r\n      }\r\n      if (taskListContainer.querySelector(\".task-list\") && taskListContainer.contains(fillerMessage)) {\r\n        taskListContainer.removeChild(fillerMessage);\r\n      }\r\n    }\r\n  });\r\n\r\n  const upcomingButton = document.querySelector(\".upcoming-button\");\r\n  upcomingButton.addEventListener(\"click\", () => {\r\n    const fillerMessage = document.createElement(\"p\");\r\n    fillerMessage.textContent = \"No upcoming tasks\";\r\n    headerTitle.textContent = \"Upcoming\";\r\n    (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.createTaskList)();\r\n    taskListContainer.appendChild(fillerMessage);\r\n\r\n    if (document.querySelector(\".add-task-button\")) {\r\n      headerDiv.removeChild(addTaskButton);\r\n    }\r\n\r\n    const storedTask = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    const taskArray = Array.from(document.querySelectorAll(\".task-list-container .task-list\"));\r\n    for (let i = 0; i < storedTask.length; i++) {\r\n      if (storedTask[i].tab !== \"upcoming\") {\r\n        const notUpcomingTaskList = taskArray[i];\r\n        if (notUpcomingTaskList) {\r\n          notUpcomingTaskList.style.display = \"none\";\r\n        }\r\n      }\r\n      if (taskListContainer.querySelector(\".task-list\") && taskListContainer.contains(fillerMessage)) {\r\n        taskListContainer.removeChild(fillerMessage);\r\n      }\r\n    }\r\n  });\r\n\r\n  function projectTabHandler(element) {\r\n    headerTitle.textContent = element.textContent;\r\n    (0,_CreateList__WEBPACK_IMPORTED_MODULE_3__.createTaskList)();\r\n\r\n    if (document.querySelector(\".add-task-button\")) {\r\n      headerDiv.removeChild(addTaskButton);\r\n    }\r\n\r\n    const storedTask = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    const taskArray = Array.from(document.querySelectorAll(\".task-list-container .task-list\"));\r\n    for (let i = 0; i < storedTask.length; i++) {\r\n      if (storedTask[i].project !== element.textContent) {\r\n        const filteredArray = taskArray[i];\r\n        if (filteredArray) {\r\n          filteredArray.style.display = \"none\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (projectListContainer.querySelector(\".project-list\")) {\r\n    const projectList = document.querySelectorAll(\".project-list\");\r\n    projectList.forEach((element) => {\r\n      element.addEventListener(\"click\", () => projectTabHandler(element));\r\n    });\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://todo-list/./src/modules/UI.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _typeof)\n/* harmony export */ });\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/@babel/runtime/helpers/esm/typeof.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;